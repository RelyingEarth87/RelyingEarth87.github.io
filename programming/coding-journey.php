<!DOCTYPE html>
<html lang="en">
<head>
	<meta name="viewport"  charset="utf-8">
    <meta content="width=device-width, initial-scale=1">
	<title>RelyingEarth87 | My Foray into Learning Code</title>
    <link rel="stylesheet" href= "E:\code\githubsite\site.css">
    <link rel="stylesheet" href="journey.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>
<body>
    <?php>include("E:\code\githubsite\navbar.html");</?>
    <div id="page">
    <div id="contents">
        <label>Table of Contents</label>
        <ul id="table">
            <li><a href="#intro">Introduction</a></li>
            <li><a href="#takeaways">My takeaways from learning to code</a></li>
            <li><a href="#KA">Khan Academy; Strengths and Drawbacks</a></li>
            <li> <a href="#recommendations">Recommended course outline</a></li>
            <li> <a href="#outline">Course Outline tree (with links)</a></li>
        </ul>
    </div>

    <h1 id="intro">Introduction</h1>
    <p>Hello, my name is Adam, or Earth, or RelyingEarth. I have been working on programming projects for a few years now, but I am new to web development. I have made this repository and website implementation to showcase some of my work. Beginning from learning Python at my university, I have been self-teaching myself some new libraries as well as this new foray into web development. Through this, I have started my journey on Khan Academy and have been making projects as I learn in order to improve my skills and make stuff that I can use in my daily life. On this page, I plan to document my journey and other thoughts I have along the process.</p>
    <p>Starting off, I would like to talk about my journey on Khan Academy itself and the path that I took to get through the course. Because I had dabbled in JavaScript with HTML and CSS back in university, I knew the very basics of how it worked, but I did not know much about actually writing the language. I wanted to learn more about the language and how to use it in conjunction with HTML and CSS to make responsive web pages. I know that nowadays people don’t use as much straight HTML and CSS to make a web page and instead use frameworks and such, but I do think that the customizability of learning yourself and the ability to work from the ground up in designing is important. I also liked being able to learn more about JavaScript as a language by using it more often and this helped me do that.</p>
    <p>I would like to write my own suggested path through the resources for computing on Khan Academy as well as suggestions of other courses I may take and how I am learning from coding my own projects since, as all programmers and coders know, people tend to learn more when they are working on their own passion projects than just by taking a course. (I would like to mention, however, that I do think there does need to be more available online education relating to libraries and coding and that new coders shouldn’t just be thrown in to sink or swim when it comes to learning the bulk of their coding abilities). </p>

    <h1 id="takeaways">My thoughts while journeying through programming education</h1>
    <p>I believe that the way that I was learning code on my own was fairly useful to me and I have learned a lot, but I am not sure that I would suggest the exact same path to everyone. Using a multitude of different resources and/or teachers or materials was very helpful because it allowed me to experience different perspectives on how code in general worked and how to manipulate it. As I said before, I started learning to code from my University with Python. I think Python is a great and very strong language while also being concise, easy to read, and intuitive to write. Learning JavaScript later on made me appreciate this even more since I will still try to write for loops like “for i in _____” since it is just so much nicer and less clunky than “for (var i = 0; i < _____.length; i++)”. </p>
    <p>Even though I generally will say that I enjoy Python more as a scripting language, JavaScript’s use as a web development tool is not in dispute. Learning JavaScript both inside and outside of the HTML DOM has been a really eye-opening experience and I understand why both JavaScript and Python are most often peoples’ first language when they foray into coding. I have seen videos like “How I would learn coding if I could start again” floating around and many seem to suggest starting with Python as a first language over JavaScript (though both are very accepted). As much as I love Python, I would probably recommend new coders to start with JavaScript. </p>
    <p>Even though I have stated that JavaScript is clunkier and less intuitive, I still think that it is better for learners to start here. I came to this assumption because of a few mishaps I had when trying to program JavaScript like programming Python. When working on a few projects of my own, I began to learn that there are a few key differences with Python and JavaScript that can completely change how code is written and thought about. </p>
    <p>The first big issue I was running into was with the “in” operator. In Python, this is everywhere, and it stems from Python making everything an object. This is super powerful and an amazing feature of Python, but it was a drawback for me when trying to switch languages and meant that I wanted to try and convert everything into an object to have that easy functionality again. While I think that knowing this is good and obviously will make beginner code more “friendly” and less stressful, I think that for anyone who wants to move on in the world of code, it is better to learn without this as this is more of a quirk of Python than a standard practice around the board. With that being said, it is my opinion that this makes Python a good language for coding “power users” who know their way around programs and can use that functionality to their benefit rather than beginners who may not understand what has been given them and need to fix their tendencies later on.</p>
    <p>In addition, I think that Python being a concise and slimmed down language is great for time-saving and readability, but I also think that this may be another case where being so powerful may actually be a disadvantage to new coders. While this one is not necessarily as strong of a detractor, I think that working on muscle memory for stuff like brackets and semicolons is a much better reinforcement to better coding concepts when moving on to different languages than learning Pythonic code, no matter how clean, since it is the exception instead of the rule. Also, learning important pieces of coding like needing to declare a variable before use is essential outside of Python, and learning JavaScript’s use of object constructors is a great lead-in to the “__init__” for objects in Python – maybe it was just my teacher’s nonchalance of “you just need to put the variables that make up your object in there” that made it hard for me back then vs Khan Academy’s useful explanations of “this” and constructors in general, but I think JavaScript’s implementation itself helped me understand this better.</p>

    <h1 id="KA">My thoughts on Khan Academy's courses and resources</h1>
    <p>I believe that Khan Academy is a great beginner resource for learning to code. While I think that there should be more languages available and more of an overarching plan for how to learn through their code, the website itself is built well for its purpose - to educate people, especially youths, about the uses of coding and how to do the basics of it. I would love for them to have more deep-dives into JavaScript or even adding add-on classes for HTML and CSS like implementing frameworks and such. However, I definitely enjoyed their content in general – the talkthroughs are a huge bonus for coding instruction and I think more places should try this out.</p>
    <p>If you don’t know what these are, the talkthroughs are not like basic coding tutorial videos, they are literally an IDE with live updates in the code as the instructor is talking and showing you how to implement it. To further explain this, <strong>they are literally a code editor with an output window that the instructor is typing into in time with what they are saying in the video and you can edit it all to experiment and see what changes.</strong> 
In general, I think that many, if not all, of the courses are well thought-out and put together, but I do think that there are a few easy ways that they could adapt the content and resources of the courses to make more of the content accessible and easier to go through. </p>
    <p>The first way I would suggest to adapt the content is to turn more of it into a video or talkthrough format. Like I said, the talkthroughs are an amazing form of coding education, but only the basic courses use them. Some of the other courses elect to go for just regular videos which are fine too, but even this doesn’t encompass enough of the content. The majority of the later courses are only in written format. This is much less accessible to learn from and unless you understand the wording entirely, it can be very hard to learn from just the written content. Not to mention that for some content where videos do exist, they did not take the time to use the licensed content. I do understand that that may cost them money, but they already had permission to use it in written form, couldn’t they at least casually suggest looking the videos up on youtube? The two biggest examples I can use here are both the Advanced JS: Natural Simulations course, and the Computer Science course about Algorithms and Cryptography (though there are other courses that can benefit from format changes). </p>
    <p>The latter course is written by comp sci professors not really associated with Khan Academy and is entirely done in a written format. While the instructors do an amazing job of teaching through this format, it is kind of disappointing that Khan Academy could not at the very least take this and adapt it to a video format or talkthrough format. They could have even left the content in text format and then added adapted videos so people could choose their format or listen and follow along in the text. It just makes learning it a little more of a chore of focus and doesn’t allow people the luxury of seeing the code content in real time or the ability to work through it while seeing it. Not to mention that a lot of the code snippets aren’t even adapted to their code editor like a lot of the other text-based courses – they literally just put screenshots of the specific section of code they change in the middle of the page, meaning one can get lost if they don’t keep track of where that is inserted.</p>
    <p>In the Advanced JS course I mentioned above, the content is also mostly text-based in format. This is because it is adapted from a book by Dan Shiffman called <a href=”https://natureofcode.com/book/”>The Nature of Code</a>, and this makes sense why the implementation is in code. However, Khan Academy does neglects to mention that Dan Shiffman has his own Youtube channel called <a href=”https://www.youtube.com/@TheCodingTrain”> The Coding Train</a> and features two separate playlists of videos that directly adapt the content of his book (i.e. the content that Khan Academy features) into video format; one playlist that uses the old format of the book in <a href=”https://www.youtube.com/playlist?list=PLRqwX-V7Uu6aFlwukCmDf0-1-uSR7mklK”>ProcessingJS</a> which is what Khan Academy uses, and one that uses the new, updated format of the book that uses <a href=”https://www.youtube.com/playlist?list=PLRqwX-V7Uu6ZV4yEcW3uDwOgGXKUUsPOM”>p5.js</a>. These courses are not only very helpful to see visually as they can be somewhat confusing in the text format, watching the content from its source not only supports Dan Shiffman himself, but Dan is fun to watch and it can really reinforce the learning. Moral of the story is, not only is Khan Academy just not adapting the content to easier and more approachable content, the content already itself exists and KA is not so much as passively mentioning it exists. I can understand that they may not own rights or anything to the content, but it’s likely that they could at least get a Creative Commons Noncommercial license to embed the youtube videos like they have for the written content or just simply put a footnote that links to the youtube playlist without needing the license since it directly benefits Dan himself. Note that I cannot directly find a Creative Commons license listed on Youtube itself, I am just assuming it would be possible to obtain for this content.</p>
    <p>Another gripe I have with the content on Khan Academy in general is just how simple or outdated it can be. While it does do a good job of teaching content, it doesn’t teach stuff like other ways to declare variables. They just use var, no let, const, float, or other types of variable declarations. In terms of dating the content, much of it has not been updated or touched in around 4 years, which is not terrible and all the content is still very usable, it just is missing so many of the modern creature comforts of a lot of the code bases. These days, it would probably be great to see an added React.js or Node.js course or something like an update from ProcessingJS to p5.js like in the Nature of Code adapted courses.</p>
    <p>Lastly, I think that there could/should be a better integration/organization of the courses on Khan Academy in general. There are several courses that could be combined or consolidated into a smaller number of better courses than making the disjointed courses based on the same concepts but pulling from different content spaces/sources. Because of this, I have decided to try my own hand at the consolidation by providing my own tree and course “syllabus” on how I would go about completing the courses on Khan Academy. As I continue my own journey into code, I may update or add on courses from other sources that will add on or teach concepts better. The plan is to have just a core frame outline with links to each page, but also having an explanation of why each step is chosen in paragraph form before the outline.</p>

    <h1 id="recommendations">My recommendations for using Khan Academy's coding program</h1>
    <p>Beginning on Khan Academy, I believe that they do have a nice introduction with the Hour of Code courses, but I don’t think it makes sense to do all of them first, especially since most of the content (pretty much everything except the projects at the end) is part of the core Intro to x, y , z courses on Khan Academy, it does not make a lot of sense to do the Hour of Code courses separately. I would, instead, do the main courses, and then come back to the Hour of Code projects (and the introductory videos and ending pages if you’re a true completionist) after doing the main course for each topic.</p>
    <p>In terms of which course I think should be your starter class when learning on Khan Academy, I think that the answer may be a little surprising. I would suggest that instead of going directly into programming courses, the first courses that I would start with are the basic computer and internet courses. While being a little more abstracted in terms of where in the computer science realms we are starting from, I believe they are all excellent starting points for a foray into computers. Learning about computers in general and computer language along with the basis for why we code is, in my opinion, a huge boon to learning programming for the first time. Because of this, I would start with the basic Code.org Computers and the Internet course along side the normal Computers and the Internet course, as they share content, and pair them with the first two units of the AP/College Computer Science Principles course before delving into learning a language. I would suggest waiting until after you take the Intro to JS course, I would come back and finish off the Computer Science Principles course as the rest of the course deals in Pseudocode and basic JavaScript, and, while you can theoretically take these courses without taking the Intro to JS course, I think it helps a lot to have that base of knowledge in JavaScript and coding in general so that you can better understand what is going on with the code and the pseudocode. </p>
    <p>As for which <em>programming</em> course to actually start out with, I think there are two viable options, I myself like the idea of beginning with the more simple and moving onto the more complex, which is why  I would suggest starting with the Intro to HTML/CSS course, before going on to the Intro to JavaScript course, but I can see merit into starting with the JavaScript course as I feel learning HTML/CSS first and then having to come back to them later on might be a bit more tricky than the opposite. I still, however, think that SQL should be taken last so that we go from front-end work to back-end work. While doing these Intro courses, I would suggest that after you finish each one, as I mentioned before, going back and doing the project(s) for that course in the Hour of Code section for more practice and a bit of fun designing basic projects within the Khan Academy development environment.</p>
    <p>After taking the basic computer courses and the basic HTML, CSS, and JS courses (in whichever order you chose to take them), I would suggest then moving on to the HTML/JS courses. This way, HTML, CSS, and JS will all be very fresh in your mind and the course will help you figure out how to use all three in conjunction for front-end web development (as well as probably some basic back-end). </p>
    <p>When these courses are finished, and potentially before if you really want to dive into JavaScript as a development language outside of the browser (or inside it), I would recommend taking the Advanced JS courses, Games & Visualizations, and Natural Simulations. From here, I would move on to the Pixar in a Box course because I think it is probably the most niche course of the list and is best used to cap off your new knowledge base than to be an integral part of your main knowledge base. </p>
    <p>P.S. Adding an optional starting course which is the Meet the Professional section of the Computer Programming course because, while it is mostly not really useful to learning to code, it can be interesting to learn about possibilities for your code after you go through the courses and it may inspire people to get that interest in learning how to code.</p>
    
    
    <h1 id="outline">Course Outline Tree</h1>
    <div id="tree">
        <ol id="courses">
            <li>Optional starting point: <a href="https://www.khanacademy.org/computing/computer-programming/meet-the-computing-professional-unit">Meet the Professional!</a></li>
            <li><a href="https://www.khanacademy.org/computing/code-org/computers-and-the-internet">Code.Org Computers and the Internet</a></li>
            <li><a href="https://www.khanacademy.org/computing/computers-and-internet">Computers and the Internet</a></li>
            <li>AP/College Computer Science Principles</li>
                <ul id="ap">
                    <li><a href="https://www.khanacademy.org/computing/ap-computer-science-principles/x2d2f703b37b450a3:digital-information">Digital Information</a></li>
                    <li><a href="https://www.khanacademy.org/computing/ap-computer-science-principles/the-internet">The Internet</a></li>
                </ul>
            <li>Computer Programming</li>
                <ul class="cProg">
                    <li><a href="https://www.khanacademy.org/computing/computer-programming/html-css">Intro to HTML/CSS: Making Webpages</a></li>
                        <ul class="hoc">
                            <li><a href="https://www.khanacademy.org/computing/hour-of-code/hour-of-code-lessons/hour-of-html/pp/project-holiday-card">Hour of Creating Webpages Project</a></li>
                        </ul>
                    <li><a href="https://www.khanacademy.org/computing/computer-programming/programming">Intro to JS: Drawing and Animation</a></li>
                        <ul class="hoc">
                            <li><a href="https://www.khanacademy.org/computing/hour-of-code/hour-of-code-lessons/hour-of-drawing-code/pp/project-super-snowman">Hour of Drawing: Super Snowman</a></li>
                            <li><a href="https://www.khanacademy.org/computing/hour-of-code/hour-of-code-lessons/hour-of-drawing-code/pp/project-wild-animal">Hour of Drawing: Wild Animal</a></li>
                            <li><a href="https://www.khanacademy.org/computing/hour-of-code/hour-of-code-lessons/hour-of-drawing-code/pp/project-self-portrait">Hour of Drawing: Self-Portrait</a></li>
                        </ul>
                    <li><a href="https://www.khanacademy.org/computing/computer-programming/html-css-js">HTML/JS: Making Webpages Interactive</a></li>
                    <li><a href="https://www.khanacademy.org/computing/computer-programming/html-js-jquery">HTML/JS: Making Webpages Interactive With JQuery</a></li>
                </ul>
            <li><a href="https://www.khanacademy.org/computing/ap-computer-science-principles/programming-101/what-is-programming/a/our-first-program-hello-world">Finish AP/College Computer Science Principles</a></li>
            <li><a href="https://www.khanacademy.org/computing/computer-science">Computer Science</a></li>
            <li>Finish Computer Programming</li>
                <ul>
                    <li><a href="https://www.khanacademy.org/computing/computer-programming/programming-games-visualizations">Advanced JS: Games and Visualizations</a></li>
                    <li><a href="https://www.khanacademy.org/computing/computer-programming/programming-natural-simulations">Advanced JS: Natural Simulations</a></li>
                    <li><a href="https://www.khanacademy.org/computing/computer-programming/sql">Intro to SQL: Querying and Managing Data</a></li>
                </ul>
            <li><a href="https://www.khanacademy.org/computing/pixar">Pixar in a Box</a></li>
        </ol>   
    </div>
    </div>
</body>
